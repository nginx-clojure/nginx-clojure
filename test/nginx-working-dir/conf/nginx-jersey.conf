###This configuration not enable coroutine or thread pool.

###you can uncomment next two lines for easy debug
daemon  off;
###Warning: if master_process is off, there will be only one nginx worker running. Only use it for debug propose.
master_process  off;

#user  nobody;
###you can set worker_processes =1 for easy debug
###if master_process is off, the count of worker processes will be 1 regardless of worker_processes settings
worker_processes  1;


#error_log   logs/error.log;
error_log   logs/error.log  debug;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
    #debug_connection 127.0.0.1;
    multi_accept on;
}



http {

   

    include       mime.types;
    default_type  text/html;
    
    max_balanced_tcp_connections 1024;

    sendfile  on;
    tcp_nopush  on;
    tcp_nodelay on;
    keepalive_timeout   65;
    keepalive_requests  100000;
    server_tokens off;
    reset_timedout_connection on;


    #gzip  on;

    jvm_path "/usr/lib/jvm/java-7-oracle/jre/lib/amd64/server/libjvm.so";
    #jvm_path "/usr/lib/jvm/jdk1.8.0_11/jre/lib/amd64/server/libjvm.so";
    
    
    jvm_var ncdev '/home/who/git/nginx-clojure';
    jvm_var mrr '/home/who/.m2/repository';
    jvm_var ncjar '#{ncdev}/target/nginx-clojure-0.4.5.jar';

    
    ###run tool mode , 't' means Tool
    #jvm_options "-javaagent:#{ncjar}=tmb";
    ###Setting Output Path of Waving Configuration File, default is $nginx-workdir/nginx.clojure.wave.CfgToolOutFile
    #jvm_options "-Dnginx.clojure.wave.CfgToolOutFile=/tmp/my-wave-cfg.txt";
    
    ###coroutine enabled mode
    #jvm_options "-javaagent:#{ncjar}=mb";
    ###for win32, class path seperator is ";"
    #jvm_options "-Xbootclasspath/a:#{ncjar}:#{mrr}/org/clojure/clojure/1.5.1/clojure-1.5.1.jar";

    ###including ring-core & compojure & clj-http & clj-jdbc & mysql-connector-java for test
    jvm_classpath "#{ncdev}/bin:#{ncjar}:coroutine-udfs:#{ncdev}/bin";
    
    
    ###setting user defined class waving configuration files which are in the above boot classpath
    #jvm_options "-Dnginx.clojure.wave.udfs=compojure-http-clj.txt,mysql-jdbc.txt,test-groovy.txt";
    
    ###for enable java remote debug uncomment next two lines, make sure "master_process = off"
    jvm_options "-Xdebug";
    jvm_options "-Xrunjdwp:server=y,transport=dt_socket,address=840#{pno},suspend=n";
    
    #for outofmemory dump
    #jvm_options "-XX:+HeapDumpOnOutOfMemoryError";
    
    #jvm_options "-Xverify:none";
    #jvm_options "-XX:+UseSerialGC";
    # jvm_options "-XX:MaxGCPauseMillis=25";
    #jvm_options "-XX:+UseG1GC";
    
    #jvm_options "-Xms1024m";
    #jvm_options "-Xmx1024m";
    

    #If jvm_workers > 0 and coroutine disabled, it is threads number (per nginx worker) for request handler thread pool on jvm. 
    #jvm_workers 16;
    
    jvm_handler_type 'java';
    
    

    
    #handlers_lazy_init off;

    
    server {
        listen       8087;
        server_name  localhost;
       
       #uncomment this two lines for performance test 
        access_log off;
#	     error_log /dev/null crit;

      location /jersey {
          content_handler_name 'nginx.clojure.bridge.NginxBridgeHandler';
          content_handler_property bridge.lib.dirs '/home/who/git/jersey/examples/json-jackson/target/dependency';
          content_handler_property bridge.lib.cp '/home/who/git/nginx-clojure/nginx-jersey/bin:/home/who/git/jersey/examples/json-jackson/target/json-jackson.jar';
          content_handler_property bridge.imp 'nginx.clojure.jersey.NginxJerseyContainer';
          content_handler_property jersey.app.path '/jersey';
          content_handler_property jersey.app.resources '
                org.glassfish.jersey.examples.jackson.EmptyArrayResource,
                org.glassfish.jersey.examples.jackson.NonJaxbBeanResource,
                org.glassfish.jersey.examples.jackson.CombinedAnnotationResource,
                org.glassfish.jersey.examples.jackson.MyObjectMapperProvider,
                org.glassfish.jersey.examples.jackson.ExceptionMappingTestResource,
                org.glassfish.jersey.jackson.JacksonFeature
          ';
          gzip on;
          gzip_types application/javascript application/xml text/plain text/css 'text/html;charset=UTF-8'; 
      }


      location /jersey-example {
          content_handler_name 'nginx.clojure.bridge.NginxBridgeHandler';
          #content_handler_property bridge.lib.dirs '/home/who/git/jersey/examples/json-jackson/target/dependency';
          content_handler_property bridge.lib.cp '/home/who/git/nginx-clojure/nginx-jersey/bin:/home/who/git/nginx-clojure/example-projects/jersey-example/target/classes:/home/who/git/nginx-clojure/example-projects/jersey-example/target/jersey-example-1.0-jar-with-dependencies.jar';
          content_handler_property bridge.imp 'nginx.clojure.jersey.NginxJerseyContainer';
          content_handler_property jersey.app.path '/jersey-example';
          content_handler_property jersey.app.resources '
             nginx.clojure.jersey.example.MyResource
          ';
          gzip on;
          gzip_types application/javascript application/xml text/plain text/css 'text/html;charset=UTF-8'; 
      }      
       
      location /dump {
         handler_type 'java';
         handler_name 'nginx.clojure.java.WaveConfigurationDumpHandler';       
      }
             

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

}
